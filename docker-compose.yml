version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: carnival-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-carnival}
      POSTGRES_USER: ${DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carnival_user -d carnival"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: carnival-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: carnival-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  milvus:
    image: milvusdb/milvus:latest
    container_name: carnival-milvus
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MILVUS_STANDALONE: "true"
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 3

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: carnival-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - etcd_data:/etcd

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: carnival-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /minio_data --console-address ":9001"
    volumes:
      - minio_data:/minio_data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Carnival Application Services
  carnival-client:
    image: sakkshm1/carnival:client-latest
    container_name: carnival-client
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_BASE_URL=http://localhost:4000
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - NEXT_PUBLIC_GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URI:-}
      - NEXT_PUBLIC_SLACK_CLIENT_ID=${SLACK_CLIENT_ID:-}
      - NEXT_PUBLIC_SLACK_REDIRECT_URL=${SLACK_REDIRECT_URI:-}
    ports:
      - "3000:3000"
    depends_on:
      - carnival-server
    restart: unless-stopped
    
  carnival-server:
    image: sakkshm1/carnival:server-latest
    container_name: carnival-server
    env_file:
      - .env
    environment:
      - PORT=4000
      - NODE_ENV=production
      - DB_USERNAME=${DB_USERNAME:-user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-carnival}
      - FRONTEND_APP_URL=http://localhost:3000
      - VECTOR_SERVER_URL=http://localhost:4001
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - SERVER_KEY=Gx18dL4pM2a
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-}
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID:-}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET:-}
      - SLACK_REDIRECT_URI=${SLACK_REDIRECT_URI:-}
      - INDEX_QUEUE=index_queue
      - ADD_VECTOR_ENTITY_QUEUE=add_vector_entity_queue
      - DELETE_VECTOR_ENTITY_QUEUE=delete_vector_entity_queue
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEFAULT_REINDEX_INTERVAL=${DEFAULT_REINDEX_INTERVAL:-}
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  carnival-vector-server:
    image: sakkshm1/carnival:vector-server-latest
    container_name: carnival-vector-server
    env_file:
      - .env
    environment:
      - PORT=4001
      - NODE_ENV=production
      - SERVER_KEY=Gx18dL4pM2a
      - SERVER_URL=http://localhost:4000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MILVUS_URI=${MILVUS_URI}
      - MILVUS_TOKEN=${MILVUS_TOKEN}
      - ADD_VECTOR_ENTITY_QUEUE=add_vector_entity_queue
      - DELETE_VECTOR_ENTITY_QUEUE=delete_vector_entity_queue
    ports:
      - "4001:4001"
    depends_on:
      milvus:
        condition: service_healthy
      carnival-server:
        condition: service_started
    restart: unless-stopped

  carnival-bull-ui:
    image: sakkshm1/carnival:bull-ui-latest
    container_name: carnival-bull-ui
    env_file:
      - .env
    environment:
      - PORT=4002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - INDEX_QUEUE=index_queue
      - ADD_VECTOR_ENTITY_QUEUE=add_vector_entity_queue
      - DELETE_VECTOR_ENTITY_QUEUE=delete_vector_entity_queue
      - ARENA_USERNAME=${ARENA_USERNAME:-admin}
      - ARENA_PASSWORD=${ARENA_PASSWORD:-admin123}
    ports:
      - "4002:4002"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  milvus_data:
  etcd_data:
  minio_data:
  pgadmin_data:

networks:
  default:
    name: carnival-network 